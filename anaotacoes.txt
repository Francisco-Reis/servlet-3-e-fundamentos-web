API de servlet:
    Base de funcionamento do java com servidores. Web app
    Os Frameworks Java Web são baseados na API de Servlet.
    Versão usada: 3.0 (Versão 4.0 prevista)

Importar projeto existente no Eclipse:
File -> Import -> Existing project into workspace

Rodar o projeto:
Clique direito -> Run as.. -> Run on Server (Vai se configurar um servidor)

Ao acessar a web app, o servidor procura na pasta 'web-content' o 'index.html'
que será a pagina inicial.

WEB-INF: diretorio escondido contendo arquivos importantes
    - web.xml: arquivo de configurações do projeto
    - lib: diretorio contendo blibliotecas (.jar) usadas no projeto
    - classes: diretorio oculto contendo as classes (.class)

Pacote de servlets: Java resorces -> src/main/java

CLASSES SERVLETS:
Classes servlets precisam estender HttpServlet
    Ex: public class BuscaEmpresa extends HttpServlet {}
Ficam acessiveis através do anottation:
    @WebServlet(urlPatterns="/busca") -> localhost:8080/nome_do_projeto/busca
Sobreescrever o metodo 'doGet()'
    Metodo getWriter do response devolve um objeto onde se pode escrever documentos html
    Ex: PrintWriter w = resp.getWriter(); (resp é o objeto Response)
        w.println("<html><body>Resposta</body></html>");
    Pegando parametros de GET: req.getParameter("nome_do_param")  -> req é o objeto request

AUDITORIA SERVLET:
Implementam interface Filter da API Servlet.
    Implementa: destroy(),init(),doFilter();
doFilter(): recebe request, response e uma serie de filtros
            Os requests e reponses são genéricos (não HTTP), é necessario fazer um cast
            HttpServletRequest x = (HttpServletRequest) req
Anotation da classe:
@WebFilter(urlPatterns="/*") -- Pra pegar tudo.

Usuario de testes:
email: guilherme.silveira@alura.com.br
senha: silveira

COOKIES:
Armazenam info no lado do cliente, pra transitar entre requisições:
Ex: informações de usuário logado.
Cokkie c = new Cookie("nome","valor") // o nome do cookkie por padrao é separado por pontos Ex: "alura.user"
resp.addCookie(c);
Os COOKIEs por padrão sempre são mandandos de volta pro servidor assim que criados.
IMPORTANTE: Manter sempre o cookie pequeno.
